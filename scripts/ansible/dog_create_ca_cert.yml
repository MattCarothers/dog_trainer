---
- hosts: 127.0.0.1
  connection: local
  #Assumes OSX localhost

  tasks:
  - name: generate pass
    command: uuid
    register: uuid

  - name: create /tmp/ca/
    file: path=/tmp/ca state=directory mode=0750

  - name: create /tmp/dog/
    file: path=/tmp/dog/ state=directory mode=0750

  - name: create /tmp/dog/ssl
    file: path=/tmp/dog/ssl state=directory mode=0750

  - name: create encrypted disk image
    shell: echo -n "{{ uuid.stdout }}" | hdiutil create -encryption -stdinpass -srcfolder /tmp/ca -format UDRW -size 1mb /tmp/ca.dmg

  - name: mount disk image
    shell: echo -n "{{ uuid.stdout }}" | hdiutil attach -stdinpass -mountroot /tmp/dog -readwrite /tmp/ca.dmg

  - name: set CN to inventory_hostname.dog
    set_fact: 
      cn: "COMPANY.com"

  - name: create ssl conf
    template: dest=/tmp/dog/ssl/ssl.conf src=templates/ssl.conf.j2

  - name: create /tmp/dog/ssl/certindex
    file: path=/tmp/dog/ssl/certindex state=touch

  - name: serial line
    lineinfile: dest=/tmp/dog/ssl/serial create=yes regexp="^000a$" line="000a"

  - name: add extended keyusage to openssl config
    lineinfile: dest=/usr/local/etc/openssl/openssl.cnf line="extendedKeyUsage=serverAuth,clientAuth" regexp="^extendedKeyUsage=(.*)"

  - name: generate root certificate
    command: openssl req -newkey rsa:2048 -days 3650 -x509 -nodes -out /tmp/dog/ca/dog-root.cer -keyout /tmp/dog/ca/private.pem -config /tmp/dog/ssl/ssl.conf -extensions v3_ca

  - name: put root key to credstash
    shell: cat /tmp/dog/ca/private.pem | credstash -t credential-store put "dog-private.pem" - 

  - name: put root cert to credstash
    shell: cat /tmp/dog/ca/dog-root.cer | credstash -t credential-store put "dog-root.cer" - 

  - name: detach from disk image
    command: hdiutil detach /tmp/dog/ca/

  - name: remove /tmp/ca/
    file: path=/tmp/ssl state=absent

  - name: remove /tmp/ca.dmg
    file: path=/tmp/ca.dmg state=absent
